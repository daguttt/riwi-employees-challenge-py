-------------------------------------------------------------------------------------------------

Ejercicio 2

Se tiene un registro de empleados en formato JSON que incluye la identificación, nombre, departamento, salario base y años de servicio. Se desea procesar este registro para aplicar un incremento salarial basado en los años de servicio, calcular el nuevo salario, y generar un resumen de los incrementos.

Tareas:

-- Sección: Linux

1. Crear Carpeta en el Escritorio: Crea una carpeta en tu escritorio utilizando tu apellido, seguido de un guion bajo y los primeros tres dígitos de tu teléfono. Por ejemplo, si tu apellido es Rodriguez y los primeros tres dígitos de tu teléfono son 321, la carpeta debería llamarse rodriguez_321.

2. Crear Archivo employees.py: En el escritorio, crea un archivo Python nuevo llamado employees.py. Este archivo será utilizado para escribir el código del desafío.

3. Crear Carpeta employees_challenge: Dentro de la carpeta que acabas de crear en tu escritorio (por ejemplo, rodriguez_321), crea una nueva carpeta y nómbrala employees_challenge. Esta carpeta servirá para organizar los archivos relacionados con el desafío.

4. Mover employees.py a employees_challenge: Traslada el archivo employees.py desde el escritorio a la carpeta employees_challenge que creaste en el paso anterior. Esto ayuda a mantener organizado tu espacio de trabajo.

5. Descargar Archivo JSON: Accede al siguiente enlace https://acortar.link/g7romA para descargar el archivo employees.json necesario para el desafío. Una vez descargado, mueve este archivo a la carpeta employees_challenge. Asegúrate de verificar el contenido del archivo para entender cómo se utiliza en el proyecto.

6. Verificación de la Estructura de Archivos: Asegúrate de que el archivo employees.py y el archivo de configuración descargado se encuentren correctamente ubicados dentro de la ruta /home/[tu_usuario]/Desktop/[tu_nueva_carpeta]/employees_challenge. Puedes verificar esto abriendo una terminal y utilizando el comando pwd.

-- Sección: Python

1. Cargar archivo employees.json utilizando el método load de la librería json: Utiliza el método load y carga el archivo con el método load utilizando with statement.

2. Generar Información de Incremento de Salario de Forma Aleatoria: Utiliza la biblioteca random junto con su función randrange para seleccionar un empleado aleatorio de la lista simulando una revisión salarial.

3. Calcular Incremento Basado en Años de Servicio: Basado en los años de servicio del empleado seleccionado, determina el porcentaje de incremento aplicable utilizando una estructura de decisión:

- 1 año -> No hay incremento
- 2 año -> incremento del 10%
- 3 año -> incremento del 30%
- mas de 3 años -> incremento del 50%

4. Aplicar Incremento al Salario: Utiliza la información de salario y años de servicio junto con el incremento aplicable para calcular el nuevo salario después del incremento.

5. Imprimir un Resumen del Incremento: Genera un resumen detallado del incremento que incluya el id del empleado, nombre del empleado, departamento, años de servicio, salario original, incremento aplicado, y el nuevo salario. Este resumen debe seguir la siguiente estructura:

--- Incremento John Doe. Departamento: IT   ---

Id del usuario: 1
Nombre: John Doe
Departamento: IT
Años De Servicio: 5
Salario Original: 50000 USD/YEAR
Incremento Aplicado: 50%
Nuevo salario: 75000 USD/YEAR

6. Actualizar el Registro de Empleados: Modificar el registro del empleado para reflejar el nuevo salario y mostrar por pantalla el empleado actualizado.
